version: '2'

services:
  <project-name>-db:
    image: postgres:alpine
    container_name: <project-name>-db
    volumes:
    - ./data:/var/lib/postgresql/data
    networks:
    - internal
    labels:
    - traefik.enable=false
    restart: always

  <project-name>-nginx:
    image: nginx:alpine
    container_name: <project-name>-nginx
    volumes:
    - ./src/static:/usr/share/nginx/html/static
    - ./src/media:/usr/share/nginx/html/media
    - ./src/files:/usr/share/nginx/html/files
    networks:
    - internal
    - <network-name>
    labels:
    - traefik.backend=<project-name>-nginx
    - traefik.docker.network=<network-name>
    - traefik.enable=true
    - traefik.frontend.rule=Host:web.example.com;PathPrefix:/static/,/media/,/files/
    - traefik.port=80
    depends_on:
    - <project-name>-web
    restart: always

  <project-name>-web:
    build: ./src
    command: sh /code/run.sh
    container_name: <project-name>-web
    depends_on:
    - <project-name>-db
    labels:
    - traefik.backend=<project-name>-web
    - traefik.docker.network=<network-name>
    - traefik.frontend.rule=Host:web.example.com;PathPrefix:/
    - traefik.port=8000
    networks:
    - internal
    - <network-name>
    restart: always
    volumes:
    - ./src:/code

networks:
  internal:
    external: false
  <network-name>:
    external: true

